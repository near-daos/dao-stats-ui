name: Build & Deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        required: false
        description: Specify environment to run on. Valid values are develop, production
  push:
    branches:
    - develop
    - staging
    tags:
    - "**"

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ECR_URL: 570288326086.dkr.ecr.us-east-1.amazonaws.com
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  get-environment:
    name: Get Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.get-environment.outputs.environment }}
      docker_env_tag: ${{ steps.get-environment.outputs.docker_env_tag }}
    steps:
      - name: get environment
        id: get-environment
        shell: bash
        run: |
          if [[ "${{ github.ref }}" =~ ^refs/tags.* ]]
          then
            echo "::set-output name=environment::production"
          elif [[ "${{ github.ref }}" =~ ^refs/heads/develop ]]
          then
            echo "::set-output name=environment::development"
          fi
          echo "::set-output name=docker_env_tag::${GITHUB_REF#refs/*/}-$GITHUB_SHA"

  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    needs:
    - get-environment
    environment:
      name: ${{ needs.get-environment.outputs.environment }}
    steps:
    - uses: actions/checkout@v2
    - name: Set Environment
      run: |
        echo DOCKER_ENV_TAG=${{ needs.get-environment.outputs.docker_env_tag }} >> $GITHUB_ENV
    - name: Docker Build Publish
      uses: ./.github/actions/docker-build-publish

  helm-deploy:
    name: Helm Deploy
    runs-on: ubuntu-latest
    if: always()
    needs:
    - get-environment
    - build-image
    steps:
    - uses: actions/checkout@v2
    - name: Set Environment
      run: |
        cat ".github/env.${{ needs.get-environment.outputs.environment }}" | grep -E -v '^\ *#' >>$GITHUB_ENV
    - name: Helm Deploy
      uses: koslib/helm-eks-action@v1.8.0
      with:
        command: |
          set -x
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --kubeconfig kubeconfig

          export CHART_FOLDER=deployment/app-chart
          helm lint $CHART_FOLDER
          helm -n $EKS_NAMESPACE \
            upgrade --install --create-namespace dao-stats-ui $CHART_FOLDER \
            --set image.tag=${{ needs.get-environment.outputs.docker_env_tag }} \
            --set environment.react_app_api_endpoint=$REACT_APP_API_ENDPOINT \
            --set environment.react_app_mainnet=$REACT_APP_MAINNET \
            --set environment.react_app_testnet=$REACT_APP_TESTNET \
            --set ingress.host=$EKS_INGRESS_HOST
